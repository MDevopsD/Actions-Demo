name: Release if New Commit Exists

on:
  workflow_dispatch:     # Manual trigger
  schedule:
    - cron: '0 2 * * *'   # Scheduled trigger at 2 AM UTC

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important to access commit history and tags

      - name: Get the latest commit hash
        id: detect
        run: |
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "üßæ Latest commit: $LATEST_COMMIT"

          # Check if the latest commit has been tagged
          TAG_EXISTS=$(git tag --points-at "$LATEST_COMMIT")
          if [ -n "$TAG_EXISTS" ]; then
            echo "‚ÑπÔ∏è Commit already tagged. Skipping release."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "‚úÖ New commit detected, ready to release."
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

    outputs:
      changed: ${{ steps.detect.outputs.changed }}

  release:
    needs: check-and-release
    if: needs.check-and-release.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Release
        run: |
          echo "üöÄ Releasing new version from commit: ${{ needs.check-and-release.outputs.LATEST_COMMIT }}"

      - name: Tag the commit to prevent future duplicate releases
        run: |
          git tag "release-${{ needs.check-and-release.outputs.LATEST_COMMIT }}"
          git push origin --tags

  skip-release:
    needs: check-and-release
    if: needs.check-and-release.outputs.changed == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Skip release
        run: echo "‚ÑπÔ∏è No new commits found. Skipping release."
