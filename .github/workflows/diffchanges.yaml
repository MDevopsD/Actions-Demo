name: Smart Detect and Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current commit
        id: check
        run: |
          echo "🔍 Detecting changes for release..."

          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "🧾 Current HEAD: $CURRENT_COMMIT"

          # Create a file to store last released commit if it doesn't exist
          if [ ! -f .last_release_commit ]; then
            echo "⏳ No last release commit found, treating as first release."
            echo "$CURRENT_COMMIT" > .last_release_commit
            echo "changed=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          LAST_COMMIT=$(cat .last_release_commit)
          echo "🧾 Last released commit: $LAST_COMMIT"

          if [ "$CURRENT_COMMIT" != "$LAST_COMMIT" ]; then
            echo "✅ New commit detected. Release needed."
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "ℹ️ No new commits. Skipping release."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Save current commit to artifact (for next run)
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "$CURRENT_COMMIT" > .last_release_commit

      - name: Upload commit file
        if: steps.check.outputs.changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: last-release-commit
          path: .last_release_commit

  release:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download last commit record
        uses: actions/download-artifact@v3
        with:
          name: last-release-commit

      - name: Perform release
        run: |
          echo "🚀 Performing release for new commit..."
          # Release logic here (e.g. build, publish, etc.)
