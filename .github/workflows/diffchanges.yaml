name: Detect and Release on Latest Commit Changes

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Runs every day at 2 AM UTC

  push:

jobs:
  check-for-latest-changes:
    runs-on: ubuntu-latest

    outputs:
      changed: ${{ steps.detect.outputs.changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important to access full commit history

      - name: Detect changes between latest and previous commit
        id: detect
        run: |
          echo "üîç Checking for changes between the latest and previous commit..."

          # Get the total number of commits
          COMMIT_COUNT=$(git rev-list --count HEAD)
          if [ "$COMMIT_COUNT" -lt 2 ]; then
            echo "‚ÑπÔ∏è Not enough commits to compare."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Get the latest and previous commit hashes
          LATEST_COMMIT=$(git log -n 1 --pretty=format:"%H")
          echo "üßæ Latest commit: $LATEST_COMMIT"

          LAST_COMMIT=$(git log -n 2 --pretty=format:"%H" | tail -n 1)
          echo "üßæ Last commit before the latest: $LAST_COMMIT"

          # Compare and get changed files
          if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ]; then
              echo "‚úÖ Commits are different. Checking for file changes..."

              FILES_CHANGED=$(git show --pretty="" --name-only "$LATEST_COMMIT")

              if [ -n "$FILES_CHANGED" ]; then
                  echo "‚úÖ Files changed in the latest commit:"
                  echo "$FILES_CHANGED"
                  echo "changed=true" >> "$GITHUB_OUTPUT"
              else
                  echo "‚ÑπÔ∏è No files changed in the latest commit."
                  echo "changed=false" >> "$GITHUB_OUTPUT"
              fi
          else
              echo "‚ÑπÔ∏è No new commits detected since the last workflow run."
              echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

  release-if-changed:
    needs: check-for-latest-changes
    if: needs.check-for-latest-changes.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Perform Release
        run: |
          echo "üöÄ Releasing based on latest commit changes."
          # Simulate or run your actual release command here

  skip-release-if-no-change:
    needs: check-for-latest-changes
    if: needs.check-for-latest-changes.outputs.changed == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Notify no changes
        run: |
          echo "‚ÑπÔ∏è No changes found in the latest commit. Skipping release."
