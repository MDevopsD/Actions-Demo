name: Release if New Commit Exists and Changes Detected

on:
  workflow_dispatch:     # Manual trigger
  schedule:
    - cron: '0 2 * * *'   # Scheduled trigger at 2 AM UTC

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important to access commit history and tags

      - name: Get the latest commit hash
        id: detect
        run: |
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "🧾 Latest commit: $LATEST_COMMIT"

          # Check if the latest commit has been tagged
          TAG_EXISTS=$(git tag --points-at "$LATEST_COMMIT")
          if [ -n "$TAG_EXISTS" ]; then
            echo "ℹ️ Commit already tagged. Skipping release."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Show files changed in the latest commit
          CHANGED_FILES=$(git show --pretty="" --name-only "$LATEST_COMMIT")
          echo "📝 Files changed in the latest commit:"
          echo "$CHANGED_FILES"

          # If files are changed, mark as changed
          if [ -n "$CHANGED_FILES" ]; then
            echo "✅ Files changed detected."
            echo "$CHANGED_FILES" >> "$GITHUB_OUTPUT"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "ℹ️ No files changed in the latest commit."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

    outputs:
      changed: ${{ steps.detect.outputs.changed }}
      changed_files: ${{ steps.detect.outputs.changed_files }}

  release:
    needs: check-and-release
    if: needs.check-and-release.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Perform Release
        run: |
          echo "🚀 Releasing new version based on the latest commit changes."

      - name: Tag the commit to prevent future duplicate releases
        run: |
          git tag "release-${{ needs.check-and-release.outputs.LATEST_COMMIT }}"
          git push origin --tags

  skip-release:
    needs: check-and-release
    if: needs.check-and-release.outputs.changed == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Skip release
        run: echo "ℹ️ No new changes detected in the latest commit. Skipping release."
